var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { AssetUtil, CoreHelperUtil, RouterController } from '@web3modal/core';
import { LitElement, html } from 'lit';
import { customElement } from 'lit/decorators.js';
import { ifDefined } from 'lit/directives/if-defined.js';
let W3mConnectingWcUnsupported = class W3mConnectingWcUnsupported extends LitElement {
    constructor() {
        super(...arguments);
        this.wallet = RouterController.state.data?.wallet;
    }
    render() {
        if (!this.wallet) {
            throw new Error('w3m-connecting-wc-unsupported: No wallet provided');
        }
        return html `
      <wui-flex
        flexDirection="column"
        alignItems="center"
        .padding=${['3xl', 'xl', '3xl', 'xl']}
        gap="xl"
      >
        <wui-wallet-image
          size="lg"
          imageSrc=${ifDefined(AssetUtil.getWalletImage(this.wallet))}
        ></wui-wallet-image>

        <wui-flex flexDirection="column" alignItems="center" gap="xxs">
          <wui-text variant="paragraph-500" color="fg-100">Not Detected</wui-text>
          <wui-text variant="small-500" color="fg-200" align="center">
            Download and install ${this.wallet.name} to continue
          </wui-text>
        </wui-flex>

        ${this.downloadBtnTemplate()}
      </wui-flex>
    `;
    }
    downloadBtnTemplate() {
        if (!this.wallet) {
            throw new Error('w3m-connecting-wc-unsupported:onDownload No wallet provided');
        }
        const { homepage } = this.wallet;
        if (!homepage) {
            return null;
        }
        return html `
      <wui-button
        size="sm"
        variant="fill"
        @click=${() => CoreHelperUtil.openHref(homepage, '_blank')}
      >
        <wui-icon color="inherit" slot="iconRight" name="externalLink"></wui-icon>
        Download
      </wui-button>
    `;
    }
};
W3mConnectingWcUnsupported = __decorate([
    customElement('w3m-connecting-wc-unsupported')
], W3mConnectingWcUnsupported);
export { W3mConnectingWcUnsupported };
//# sourceMappingURL=index.js.map