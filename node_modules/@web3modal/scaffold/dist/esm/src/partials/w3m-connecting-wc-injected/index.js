var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { ConnectionController, ModalController } from '@web3modal/core';
import { customElement } from 'lit/decorators.js';
import { W3mConnectingWidget } from '../../utils/w3m-connecting-widget/index.js';
let W3mConnectingWcInjected = class W3mConnectingWcInjected extends W3mConnectingWidget {
    constructor() {
        super();
        if (!this.wallet) {
            throw new Error('w3m-connecting-wc-injected: No wallet provided');
        }
        this.onConnect = this.onConnectProxy.bind(this);
        this.onAutoConnect = this.onConnectProxy.bind(this);
    }
    async onConnectProxy() {
        try {
            this.error = false;
            await ConnectionController.connectExternal({ id: 'injected' });
            ModalController.close();
        }
        catch {
            this.error = true;
        }
    }
};
W3mConnectingWcInjected = __decorate([
    customElement('w3m-connecting-wc-injected')
], W3mConnectingWcInjected);
export { W3mConnectingWcInjected };
//# sourceMappingURL=index.js.map